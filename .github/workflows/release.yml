name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Create release directory
      run: mkdir -p release
    
    - name: Build for multiple platforms
      run: |
        # Linux amd64
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o release/timeline2svg-linux-amd64 .
        
        # Linux arm64
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o release/timeline2svg-linux-arm64 .
        
        # Windows amd64
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o release/timeline2svg-windows-amd64.exe .
        
        # Windows arm64
        GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o release/timeline2svg-windows-arm64.exe .
        
        # macOS amd64
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o release/timeline2svg-darwin-amd64 .
        
        # macOS arm64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o release/timeline2svg-darwin-arm64 .
    
    - name: Create sample files for release
      run: |
        # Copy existing sample files
        cp close-events-sample.csv release/
        cp detailed-styling-config.yaml release/
        
        # Copy README for release
        cp README.md release/
    
    - name: Create archives
      run: |
        cd release
        
        # Linux amd64
        tar -czf timeline2svg-linux-amd64.tar.gz timeline2svg-linux-amd64 README.md close-events-sample.csv detailed-styling-config.yaml
        
        # Linux arm64
        tar -czf timeline2svg-linux-arm64.tar.gz timeline2svg-linux-arm64 README.md close-events-sample.csv detailed-styling-config.yaml
        
        # Windows amd64
        zip timeline2svg-windows-amd64.zip timeline2svg-windows-amd64.exe README.md close-events-sample.csv detailed-styling-config.yaml
        
        # Windows arm64
        zip timeline2svg-windows-arm64.zip timeline2svg-windows-arm64.exe README.md close-events-sample.csv detailed-styling-config.yaml
        
        # macOS amd64
        tar -czf timeline2svg-darwin-amd64.tar.gz timeline2svg-darwin-amd64 README.md close-events-sample.csv detailed-styling-config.yaml
        
        # macOS arm64
        tar -czf timeline2svg-darwin-arm64.tar.gz timeline2svg-darwin-arm64 README.md close-events-sample.csv detailed-styling-config.yaml
    
    - name: Generate changelog
      run: |
        # Simple changelog generation
        echo "## Changes in this release" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/timeline2svg-linux-amd64.tar.gz
          release/timeline2svg-linux-arm64.tar.gz
          release/timeline2svg-windows-amd64.zip
          release/timeline2svg-windows-arm64.zip
          release/timeline2svg-darwin-amd64.tar.gz
          release/timeline2svg-darwin-arm64.tar.gz
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
